% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pPPCA.R
\name{pPPCA}
\alias{pPPCA}
\title{Penalized Probabilistic PCA}
\usage{
pPPCA(
  lambda,
  Tvotes = 1000,
  verbose = FALSE,
  penalty = 1,
  tau = 0.001,
  beta = NULL
)
}
\arguments{
\item{lambda}{a numerical vector of sample eigenvalues}

\item{Tvotes}{the number of possible tuning parameter values to be searched}

\item{verbose}{a logical to indicate whether the details of the penalized voting results should be shown}

\item{penalty}{an integer indicating the type of penalty function to use. The default option is 1, which corresponds to the model in Deng and Craiu (2021).}

\item{tau}{a tolerance threshold for the smallest eigenvalue, the default value is 0.001.}

\item{beta}{a numeric between 0 and 1 indicating the weight towards penalty function 1 or 2.}
}
\value{
an integer $K$ between 1 and $n$.
}
\description{
The function returns the results of penalized profile
   log-likelihood given a matrix of data or a vector of sample
   eigenvalues. The data matrix is assumed to follow the decomposition
   \eqn{X = WL + \epsilon}, where rows of \eqn{X} are decomposed to a linear projection
   in an orthogonal space plus error. The solution finds the
   rank of \eqn{W}, which represents some hidden structure in
   the data, such that \eqn{X-WL} have independent and
   identically distributed components.
}
\examples{
\dontrun{
library(MASS)
normdata <- mvrnorm(1000, mu = rep(0,50), Sigma = diag(1,50))
eigen_values <- eigen(as.matrix(Matrix::nearPD(stats::cov(scale(normdata)))$mat))$val

pPPCA(lambda = lambda) # supply the sample eigenvalues
}


}
\keyword{PCA,}
\keyword{dimension}
\keyword{effective}
\keyword{log-likelihood,}
\keyword{parameter,}
\keyword{penalized}
\keyword{penalty}
\keyword{probabilistic}
\keyword{profile}
\keyword{tuning}
